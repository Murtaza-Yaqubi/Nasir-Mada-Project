---
title: "statistical-analysis"
format: html
editor: visual
---

## 

```{r}
#load needed packages. make sure they are installed.
library(here) #for data loading/saving
library(dplyr)
library(skimr)
library(ggplot2)
install.packages("maps")
library(maps)
install.packages("ggcorrplot")
library(ggcorrplot)
install.packages("plm")
library(plm)
install.packages("gt")
library(gt)
install.packages("car")
library(car)
install.packages("MASS")  # Jika belum terinstall
library(MASS)
install.packages("tidyverse")
library(tidyverse)
install.packages("reshape2")  # Install the package (only needed once)
library(reshape2)  # Load the package
install.packages("scales")
library(scales)

library(splines)
library(here)
library(knitr)
install.packages("kableExtra")
library(kableExtra)
install.packages("GGally")
library(GGally)
# Install and load the patchwork package
install.packages("patchwork")
library(patchwork)

install.packages("gridExtra")  # If not installed
library(gridExtra)

install.packages("lmerTest")
library(lmerTest)
install.packages("stargazer")
library(stargazer)

```

Load the dataset

```{r}

asia_africa_location <- here("data", "processed-data", "asia_africa.rds")
asia_africa <- readRDS(asia_africa_location)

# In the study, I will focus on Water and Sanitation and remove Lesotho as it considered as outlier
asia_africa <- asia_africa%>%
  filter(country != "Lesotho") %>% #Drop Lesotho from the observation
  select("tbi", "year", "pro_basicwater", "pro_safewater", "pro_basicsanitation", "pro_safesanitation", "hdi", "country", "region")

colnames(asia_africa)
```

## Data Analysis

***Test the linearity***


```{r}
# Adding Fixed-Effect to Make Conditional Models ---
ggplot(asia_africa, aes(x = year, y = tbi)) + 
  geom_line(aes(group=country), col="grey") + 
  stat_smooth(method="loess", col="black", lwd=1.5, se=FALSE)+
  scale_x_continuous(name = "years") + 
  scale_y_continuous(name = "Tuberculosis Incidence") +
  theme_bw() + 
  theme(axis.text=element_text(size=14, colour="black"), 
        axis.title=element_text(size=14,face="bold")) +
  theme(strip.text.x = element_text(size = 14))+ theme(legend.position="none") 
```



```{r}
# Convert dataset to long format for faceting
asia_africa_long <- asia_africa %>%
  pivot_longer(cols = c(pro_basicwater, pro_safewater,
                        pro_basicsanitation, pro_safesanitation, hdi),
               names_to = "variable", values_to = "value")

# Create scatter plot faceted by independent variable
scatter_faceted <- ggplot(asia_africa_long, aes(x = value, y = tbi, color = country)) + 
  geom_point(alpha = 0.6) +  # Scatter points, colored by country
  stat_smooth(method = "loess", col = "black", lwd = 1.2, se = FALSE) +  # LOESS (non-linear) in black
  facet_wrap(~ variable, scales = "free_x") +  # Facet by variable
  labs(x = "Independent Variable Value", y = "Tuberculosis Incidence (TBI)") +
  theme_bw() + 
  theme(axis.text = element_text(size = 12, colour = "black"), 
        axis.title = element_text(size = 14, face = "bold"),
        strip.text = element_text(size = 14, face = "bold"), 
        legend.position = "none")  # Hides the legend


nonrelationshiplot_location <- here( "code","analysis-code", "figures", "nonlinear.png") # to set up location for the pictures created 
ggsave(filename = nonrelationshiplot_location, plot=scatter_faceted, width = 12, height = 12, units = "in", dpi = 300) # save the pictures created 
# Show plot
print(scatter_faceted)

```

Non-linearity test 
```{r}
# Install package if not already installed
install.packages("lmtest")
library(lmtest)

# Fit a linear model
lm_model <- lm(tbi ~ pro_cleanfuel + pro_basicwater + pro_safewater + 
               mean_exposure_pm2.5 + total_greenhouses + 
               pro_basicsanitation + pro_safesanitation + gdp + hdi, 
               data = asia_africa)

# Run the RESET test for linearity
resettest(lm_model, power = 2:3)

```





```{r}


# Fit a linear model (LM)
lm_model <- lm(tbi ~ pro_cleanfuel + pro_basicwater + pro_safewater + 
               mean_exposure_pm2.5 + total_greenhouses + 
               pro_basicsanitation + pro_safesanitation + gdp + hdi, 
               data = asia_africa)

# Fit a non-linear model (GAM)
gam_model <- gam(tbi ~ s(pro_cleanfuel) + s(pro_basicwater) + s(pro_safewater) + 
                  s(mean_exposure_pm2.5) + s(total_greenhouses) + 
                  s(pro_basicsanitation) + s(pro_safesanitation) + 
                  s(gdp) + s(hdi), 
                 data = asia_africa, method = "REML")

# Compare AIC values
AIC(lm_model, gam_model)




# Plot residuals vs. fitted values for the linear model
plot(lm_model$fitted.values, resid(lm_model), 
     xlab = "Fitted Values", ylab = "Residuals", 
     main = "Residuals vs. Fitted Plot")
abline(h = 0, col = "red")  # Horizontal line at 0

```

```{r}
gamm_model <-gam(tbi ~ s(year) + s(pro_cleanfuel) + s(hdi) + ti(pro_cleanfuel, hdi) + s(country, bs="re"), 
    family = nb(), method = "REML", data = asia_africa)

```


```{r}
library(car)
vif(gamm_model)
```


```{r}
cor_matrix <- cor(asia_africa[, c("year", "pro_cleanfuel", "hdi", "gdp")], use="pairwise.complete.obs")
print(cor_matrix)

```


### Longitudinal analysis with Mixed-effect models
```{r}
# Pastikan tidak ada NA dalam variabel yang dianalisis
asia_africa_clean <- asia_africa %>%
  drop_na(tbi, pro_cleanfuel, mean_exposure_pm2.5, pro_basicwater, pro_safewater, pro_basicsanitation, pro_safesanitation, total_greenhouses, gdp, hdi, year, country)



# Model Mixed-Effects: TBI is predicted by predictors with random effect per each country 
model_lmm <- lmer(tbi ~ pro_cleanfuel+ mean_exposure_pm2.5 + pro_basicwater + pro_safewater + pro_basicsanitation + pro_safesanitation + total_greenhouses + gdp + hdi + year + (1 | country),  # Random intercept dressed variation in each country
                   data = asia_africa_clean, REML = FALSE)

# Ringkasan hasil model
summary(model_lmm)
```




Interpretation: The predictors have no linear relationship with Tuberculosis Incidence. Therefore, we would like to perform nonlinear relationship to decide further action and analysis.

***Check Nonlinear relationship***

```{r}


# Reshape the dataset to long format
asia_africa_long <- asia_africa %>%
  pivot_longer(cols = c( pro_basicwater, pro_safewater, pro_basicsanitation, 
                        pro_safesanitation,hdi),
               names_to = "Predictor", values_to = "Value")

# Plot nonlinear relationships using LOESS smoothing
nonlinear <- ggplot(asia_africa_long, aes(x = Value, y = tbi)) +
  geom_point(alpha = 0.5) +  # Scatter points
  geom_smooth(method = "loess", color = "red") +  # LOESS curve
  facet_wrap(~ Predictor, scales = "free_x") +  # Separate plots for each predictor
  theme_minimal() +
  labs(title = "Nonlinear Relationship between TBI and Predictors",
       x = "Predictor Value",
       y = "TBI")


nonrelationshiplot_location <- here( "code","analysis-code", "figures", "nonlinear.png") # to set up location for the pictures created 
ggsave(filename = nonrelationshiplot_location, plot=nonlinear, width = 12, height = 12, units = "in", dpi = 300) # save the pictures created 
plot(nonlinear)
```

It can be seen that some variables show u-shaped (quadratic), however some variables looks more complex. In this case, we are going to try to fit two models, first model will fit Mixed effects model with Polynomial Terms, and addictive mixed model (GAMM). 

I will perform two steps here: 
1. Data transformation, then looking at possible model, 
2. Directly performing Mixed effects model with polynomial terms, and Performing GAMM 

```{r}

library(dplyr)

asia_africa <- asia_africa %>%
  mutate(
    log_tbi = log(tbi + 1),
    sqrt_basicwater = sqrt(pmax(pro_basicwater, 0)), 
    sqrt_safewater = sqrt(pmax(pro_safewater, 0)),
    poly_basicsanitation = as.numeric(poly(pro_basicsanitation, 2, raw = TRUE)[, 1]),
    poly_safesanitation = as.numeric(poly(pro_safesanitation, 2, raw = TRUE)[, 1])
  )




```

```{r}
asia_africa_transformed <- asia_africa %>%
  dplyr::select(log_tbi, poly_basicsanitation, poly_safesanitation,
                sqrt_basicwater, sqrt_safewater, hdi) %>%
  pivot_longer(cols = -log_tbi, names_to = "Predictor", values_to = "Value")

colnames(asia_africa)

# Plot after transformation
transformed <- ggplot(asia_africa_transformed, aes(x = Value, y = log_tbi)) +
  geom_point(alpha = 0.3) +
  geom_smooth(method = "lm", color = "red") +  # Use linear model for comparison
  facet_wrap(~ Predictor, scales = "free_x") +
  theme_minimal() +
  labs(title = "Transformed Predictor Relationships with Log(TBI)",
       x = "Transformed Predictor Value", y = "Log(TBI)")

transformedplot_location <- here( "code","analysis-code", "figures", "transformed.png") # to set up location for the pictures created 
ggsave(filename = transformedplot_location, plot=transformed, width = 12, height = 12, units = "in", dpi = 300) # save the pictures created 
plot(transformed)
```



*Generalized Linear mixed model (GLMM)*
After transformation, the data show linear relationship, therefore we perform Linear Mixed Models (LMM) 
```{r}

#Generalized Linear mixed model (GLMM)
#without HDI
library(lme4)
model1<- glmer(log(tbi) ~ sqrt(pro_basicwater) + sqrt(pro_safewater) + 
                          poly(pro_basicsanitation, 2) + poly(pro_safesanitation, 2) +
                          (1 | country), data = asia_africa)
summary(model1)


```


Interpretation:
✔ Random intercept for country is moderate, meaning tbi varies across countries.
✔ Residual variance is small, indicating that the model explains much of the variability

✔ Intercept (5.24113) is highly significant, representing the baseline log-transformed tbi when all predictors are at their reference values.
✔ poly(pro_basicsanitation, 2)1 (first-order term) is significant, indicating that basic sanitation has a linear effect on tbi.
❌ poly(pro_basicsanitation, 2)2 (second-order term) is not significant, suggesting that the quadratic effect is weak or unnecessary.
❌ pro_basicwater and pro_safewater are not significant, meaning they may not be strong predictors of tbi.





```{r}
#with HDI
library(lme4)
model2<- glmer(log(tbi) ~ sqrt(pro_basicwater) + sqrt(pro_safewater) + 
                          poly(pro_basicsanitation, 2) + poly(pro_safesanitation, 2) +
                          (1 | country) + hdi, data = asia_africa)
summary(model2)

```
Interpretation: 

✔ Random intercept for country is moderate, meaning tbi varies across countries.
✔ Residual variance is very small, indicating that the model explains most of the variability, but this may suggest overfitting.

✔ HDI (hdi) is highly significant (p < 0.001), meaning higher HDI is associated with lower tbi.
✔ poly(pro_basicsanitation, 2)1 (first-degree term) is significant, indicating that basic sanitation has a non-linear effect on tbi.
❌ poly(pro_basicsanitation, 2)2 (second-degree term) is not significant, suggesting that the quadratic effect is weak or unnecessary.
❌ pro_basicwater and pro_safewater are not significant, meaning they may not be useful in predicting tbi.



*check wulticolinearity*
```{r}
vif(model_lmm)
```
The Vif test shows that Pro_safesanitation is >5. We need to remove. 

*fit model without non-significant predictor* 

```{r}
#refit model without non-significant predictor using lmm 
model3 <- glmer(log(tbi) ~ hdi + poly(pro_basicsanitation, 2) + (1 | country), 
                     data = asia_africa)
summary(model3)

```
Interpretation:

The country-level variance (0.42162) is relatively high, indicating that TB incidence varies significantly between countries.
The residual variance (0.01748) is much smaller, meaning a significant portion of TB variation is explained by country-level differences.


Key Findings
✅ HDI is highly significant (Estimate = -3.67, p < 2e-16)

Higher HDI is strongly associated with lower TB incidence.
A 1-unit increase in HDI decreases log(TBI) by ~3.67.
✅ Second-degree polynomial term for sanitation (pro_basicsanitation²) is highly significant (p = 4.15e-06)

Suggests a nonlinear relationship between basic sanitation and TB incidence.
Diminishing or increasing effects at different levels of sanitation.
❌ First-degree polynomial term for sanitation (pro_basicsanitation¹) is NOT significant (p = 0.286)

This indicates that a linear effect of sanitation is weak.
The nonlinear (quadratic) effect is more important.


*Performing Generalized Additive Models (GAM)*

```{r}
model4 <- gamm(log(tbi) ~ s(hdi, bs="ps") + s(pro_basicwater, bs="ps") +
                         s(pro_safewater, bs="ps") + s(pro_basicsanitation, bs="ps") +
                         s(country, bs="re"),
              data = asia_africa_clean, method = "REML")
# bam() from mgcv, which is more efficient for mixed models
summary(model4$gam)
plot(model4$gam)

```






```{r}
AIC(model1)
AIC(model2)
AIC(model3)
AIC(model4)

BIC(model1)
BIC(model2)
BIC(model3)
BIC(model4)
```
```{r}
# Create a data frame for model comparison
model_comparison <- data.frame(
  Model = c("Model 1: Main Predictors", "Model 2: Including Covariates", "Model 3: Significant variables only", "Model 4: GAMM"),
  AIC = c(AIC(model1), AIC(model2), AIC(model3), AIC(model4)),
  BIC = c(BIC(model1), BIC(model2), BIC(model3), BIC(model4))
)

# Print the table
print(model_comparison)

library(here)

# Define the file location using here()
criteria_location <- here("code", "analysis-code", "tables", "criteria_output.rds")

# Save the model
saveRDS(model_comparison, file = criteria_location)


# Save as a nicely formatted text file
sink("model_comparison.txt")
print(model_comparison)
sink()

```





Model4 (GAM) Performs better. 

Lets visualize model4 

```{r}


# Define the file path using here()
plot_location <- here("code", "analysis-code", "figures", "gam_diagnostics.jpg")

# Open JPEG device
jpeg(plot_location, width = 2000, height = 1500, res = 300)

# Arrange the plots in a grid (2 rows, 3 columns)
par(mfrow = c(2, 3))  
plot(model4$gam, pages = 1)  # Generate all GAM diagnostic plots

# Close the graphics device to save the file
dev.off()

# Confirm file saved
print(paste("Plot saved at:", plot_location))

```



```{r}
# Create summary table
gam_summary <- summary(model4$gam)

# Extract relevant statistics
gam_table <- data.frame(
  Term = rownames(gam_summary$s.table),
  EDF = gam_summary$s.table[, 1],
  F_Value = gam_summary$s.table[, 3],
  P_Value = gam_summary$s.table[, 4]
)

# Define the file location using here()
summary_location <- here("code", "analysis-code", "tables", "summary_Gamm.rds")

# Save the model
saveRDS(gam_table, file = summary_location)
```



After transforming variables. They look more linear. Now GLM will be performed

***GLMs***

```{r}
glm_model <- glm(log_tbi ~ log_gdp + log_total_greenhouses + log_pm2.5 +
                      poly_cleanfuel + poly_basicsanitation + poly_safesanitation +
                      sqrt_basicwater + sqrt_safewater + hdi,
                 data = asia_africa, family = gaussian)
summary(glm_model)

```

\*\*\*General Addictive Model (GAM)

```{r}
library(mgcv)

gam_model <- gam(log_tbi ~ s(log_gdp) + s(log_total_greenhouses) + s(log_pm2.5) +
                      s(poly_cleanfuel) + s(poly_basicsanitation) + s(poly_safesanitation) +
                      s(sqrt_basicwater) + s(sqrt_safewater) + s(hdi),
                 data = asia_africa, family = gaussian)
summary(gam_model)

```

Interpretation:

Generalized Additive Model (GAM) explains 94.5% of the deviance in log-transformed tuberculosis incidence (Log(TBI)), which suggests an excellent fit. Below is a step-by-step breakdown of the interpretation.

Overall Model Performance Adjusted R² (R-sq.(adj) = 0.917) - This means 91.7% of the variability in Log(TBI) is explained by the predictors. - A very strong model since it explains most of the variance.

Deviance Explained = 94.5%

-   Similar to R² but for GAM, indicating excellent model fit.

Generalized Cross-Validation (GCV) = 0.0685

-   Lower GCV indicates better predictive performance.
-   This suggests that the model generalizes well to new data.

![](images/clipboard-4125844072.png)

Now, I want to remove insignificant variables

```{r}
gam_optimized <- gam(log_tbi ~ s(log_gdp) + s(log_total_greenhouses) + s(log_pm2.5) + 
                         s(poly_cleanfuel) + s(sqrt_basicwater) + 
                         s(sqrt_safewater) + s(hdi),
                     data = asia_africa, family = gaussian)
summary(gam_optimized)

```

Comparing GAM models

```{r}
AIC(gam_model, gam_optimized)
BIC(gam_model, gam_optimized)


```

Visualize significant predictors

```{r}
plot(gam_model, pages = 1, shade = TRUE)

```

```{r}
ggplot(data = asia_africa, aes(x = exp(log_tbi), y = exp(predict(gam_model, type = "response")))) +
  geom_point(alpha = 0.5) +
  geom_abline(slope = 1, intercept = 0, color = "red") +
  labs(title = "Actual vs. Predicted TBI",
       x = "Actual TBI", y = "Predicted TBI")

```

***Comparing the model***

```{r}
AIC(glm_model, gam_model)
BIC(glm_model, gam_model)
```

After comapring the models, based on AIC and BIC, GAM model is more appropriate

Check Paryial effects of Predictors

```{r}
plot(gam_model, pages = 1, shade = TRUE)

```

```{r}
predictions <- predict(gam_model, newdata = asia_africa, type = "response")
head(predictions)

```

Compare actual vs predicted values

```{r}
ggplot(data = asia_africa, aes(x = log_tbi, y = predictions)) +
  geom_point(alpha = 0.5) +
  geom_abline(slope = 1, intercept = 0, color = "red") +
  labs(title = "Actual vs. Predicted Log(TBI)", x = "Actual Log(TBI)", y = "Predicted Log(TBI)")


asia_africa$predicted_tbi <- exp(predict(gam_model, newdata = asia_africa, type = "response"))

ggplot(asia_africa, aes(x = tbi, y = predicted_tbi)) +
  geom_point(alpha = 0.5) +
  geom_abline(slope = 1, intercept = 0, color = "red") +
  labs(title = "Actual vs. Predicted TBI",
       x = "Actual TBI", y = "Predicted TBI")

```

Interpretation:

The points are generally close to the line, indicating that the model is accurate.

```{r}

# Step 1: Ensure all numeric variables are correctly formatted
asia_africa <- asia_africa %>%
  mutate(across(c(tbi, pro_cleanfuel, pro_basicwater, pro_safewater, 
                  mean_exposure_pm2.5, total_greenhouses, pro_basicsanitation, 
                  pro_safesanitation, gdp, hdi), as.numeric)) %>%
  drop_na()  # Remove rows with missing values to avoid ggplot errors

asia_africa <- asia_africa %>%
  mutate(poly_greenhouses = as.numeric(poly(total_greenhouses, degree = 2, raw = TRUE)[,1]))


# Ensure it's a tibble
asia_africa <- as_tibble(asia_africa)

# Select variables (excluding categorical ones)
asia_africa_selected <- asia_africa %>%
  select(-all_of(c("country", "region", "year")))

# Reshape the dataset
asia_africa_long <- asia_africa_selected %>%
  pivot_longer(cols = -tbi, names_to = "predictor", values_to = "value")

# Print first few rows
print(head(asia_africa_long))




# Step 2: Reshape the dataset for visualization
asia_africa <- as_tibble(asia_africa)
asia_africa_long <- asia_africa %>%
  select(-c(country, region, year)) %>%  # Use `-c()` for multiple column exclusion
  pivot_longer(cols = -tbi, names_to = "predictor", values_to = "value")



# Step 3: Check if pivot_longer() worked correctly
print(head(asia_africa_long))

# Step 4: Generate scatterplots with loess smoothing to detect nonlinear patterns
plot_nonlinear <- ggplot(asia_africa_long, aes(x = value, y = tbi)) +
  geom_point(alpha = 0.5) +  # Scatterplot points
  geom_smooth(method = "loess", color = "red") +  # Loess smoothing for nonlinear trends
  facet_wrap(~predictor, scales = "free") +  # Create separate plots for each predictor
  theme_minimal()

# Step 5: Display the plot
print(plot_nonlinear)



nonlinear_location <- here( "code","analysis-code", "figures", "nonlinear.png") # to set up location for the pictures created 
ggsave(filename = nonlinear_location, plot=plot_nonlinear, width = 12, height = 12, units = "in", dpi = 300) # save the pictures created 
plot(combined_plot)
```

```{r}
glm_model <- glm(tbi ~ gdp + hdi + pro_basicsanitation + pro_basicwater + 
                 pro_safesanitation + pro_safewater + pro_cleanfuel + 
                 mean_exposure_pm2.5 + total_greenhouses, 
                 family = poisson(link = "log"), data = asia_africa)
summary(glm_model)

plot(glm_model)

```

Q-Q plot of residuals from the Poisson GLM suggests that the model is not fitting the data well. The deviation from the straight line, especially at higher quantiles (outliers labeled 78, 79, 80), indicates overdispersion—where the variance of tbi is larger than the mean, violating the Poisson assumption.

```{r}
dispersion_test <- sum(residuals(glm_model, type="pearson")^2) / glm_model$df.residual
dispersion_test  # If > 1.5, overdispersion exists

```

since the result is very high, which should be close to 1. We need a model that can hanlde overdispersion

```{r}
library(MASS)
glm_nb <- glm.nb(tbi ~ gdp + hdi + pro_basicsanitation + pro_basicwater + 
                 pro_safesanitation + pro_safewater + pro_cleanfuel + 
                 mean_exposure_pm2.5 + total_greenhouses, data = asia_africa)
summary(glm_nb)

```

Interpretation:

1.  Overdispersion Check The estimated Theta (4.246, SE = 0.430) suggests that overdispersion is present but is well-accounted for by the Negative Binomial model. The Residual Deviance (196.14) is much lower than the Null Deviance (409.01), meaning the model fits the data better than a null model. Dispersion parameter = 1, confirming that the Negative Binomial model is appropriate.

The predictors that significantly impact TBI (tbi) are:

-   hdi (-7.642, p \< 2e-16) Higher HDI is associated with lower tbi cases.
-   pro_basicsanitation (0.00577, p = 0.0334) Increased access to basic sanitation is linked to a slight increase in tbi.
-   pro_basicwater (0.0318, p = 9.42e-16) → Higher access to basic water is positively associated with tbi.
-   pro_safewater (-0.00856, p = 0.0414) → Increased safe water access reduces tbi.
-   pro_cleanfuel (-0.005999, p = 0.0137) → More use of clean fuels is linked to lower tbi.
-   mean_exposure_pm2.5 (-0.02698, p \< 2e-16) → Higher PM2.5 exposure reduces tbi (unexpected; may need further investigation).

Data Transfomation

```{r}
asia_africa <- asia_africa %>%
  mutate(log_tbi = log(tbi + 1),
         log_cleanfuel = log(pro_cleanfuel + 1),
         log_basicwater = log(pro_basicwater + 1),
         log_basicsanitation = log(pro_basicsanitation + 1),
         log_safewater = log(pro_safewater + 1),
         log_safesanitation = log(pro_safesanitation + 1),
         poly_greenhouses = poly(total_greenhouses, 2))  # 2nd-degree polynomial

```

```{r}
library(mgcv)

gam_model <- gam(tbi ~ s(pro_cleanfuel) + s(pro_basicwater) + s(pro_safewater) +
                   s(mean_exposure_pm2.5) + s(total_greenhouses) +
                   s(pro_basicsanitation) + s(pro_safesanitation) +
                   s(gdp) + s(hdi), data = asia_africa, method = "REML")

summary(gam_model)
gamplot<- plot(gam_model, pages = 1)


```

```{r}
# Calculate correlations
cor(asia_africa$tbi, asia_africa$gdp)
cor(asia_africa$tbi, asia_africa$mean_exposure_pm2.5)
cor(asia_africa$tbi, asia_africa$hdi)
cor(asia_africa$tbi, asia_africa$pro_cleanfuel)
cor(asia_africa$tbi, asia_africa$pro_basicwater)
cor(asia_africa$tbi, asia_africa$pro_safewater)
cor(asia_africa$tbi, asia_africa$pro_basicsanitation)
cor(asia_africa$tbi, asia_africa$pro_safesanitation)
cor(asia_africa$tbi, asia_africa$mean_exposure_pm2.5)



```

Spearman's Rank Correlation (Recommended) Spearman correlation is a non-parametric method that measures monotonic relationships (whether the variables move together, not necessarily linearly).

```{r}

# Compute Spearman correlation matrix
cor_matrix_spearman <- cor(asia_africa[, c("tbi","gdp", "hdi", "pro_cleanfuel", "pro_safewater", 
                                           "pro_basicsanitation", "pro_safesanitation", "mean_exposure_pm2.5", "total_greenhouses")], method = "spearman", use = "complete.obs")



# Melt the matrix into long format for ggplot

cor_melted <- melt(cor_matrix_spearman)

# Plot heatmap
plot5 <- ggplot(cor_melted, aes(Var1, Var2, fill = value)) +
  geom_tile() +
  scale_fill_gradient2(low = "red", mid = "white", high = "blue", midpoint = 0) +
  geom_text(aes(label = round(value, 2)), size = 4) +  # Show correlation values
  theme_minimal() +
  labs(title = "Spearman Correlation Heatmap", x = "", y = "")
matrix_location <- here( "code","eda-code", "figures", "correlation_matrix.png") # to set up location for the pictures created 
ggsave(filename = matrix_location, plot=plot5, width = 12, height = 12, units = "in", dpi = 300) # save the pictures created 
plot(plot5)
```

```{r}

#| label: fig-Spearman's Correlation Matrix 
#| fig-cap: "Spearman's Correlation Matrix "
#| echo: FALSE
knitr::include_graphics(here("code", "eda-code", "figures", "correlation_matrix.png"))
```

I will performed longitudinal data analysis

```{r}
library(car)
#vif(lm(tbi ~ gdp + hdi + pro_cleanfuel + pro_safewater + pro_basicsanitation + 
       pro_safesanitation + mean_exposure_pm2.5 + total_greenhouses, data = pdata)) # The error might be occure due to multicolinearity 

#alias(lm(tbi ~ gdp + hdi + pro_cleanfuel + pro_safewater + pro_basicsanitation + 
         pro_safesanitation + mean_exposure_pm2.5 + total_greenhouses, data = asia_africa))



stepwise_model <- stepAIC(lm(tbi ~ gdp + hdi + pro_cleanfuel + pro_safewater + pro_basicsanitation + 
                             pro_safesanitation + mean_exposure_pm2.5 + total_greenhouses, 
                             data = asia_africa), direction = "both") # drop variable with multicolinearity 

summary(stepwise_model)

```

***Performing longitudinal analysis***

Test for mixed or fixed effect using Hausman Test

```{r}
pdata <- pdata.frame(asia_africa, index = c("country", "year"))

fe_model <- plm(tbi ~ pro_basicsanitation + mean_exposure_pm2.5, 
                data = pdata, model = "within")
re_model <- plm(tbi ~ pro_basicsanitation + mean_exposure_pm2.5, 
                data = pdata, model = "random")

hausman_test <- phtest(fe_model, re_model)
print(hausman_test)

```

Based on the Hausman Test, fixed effect is not consistent. Therefore, I will use mixed effect test.

```{r}
summary(re_model)
```

Interpretation: ***1. variance components Analyisis***

88% dari total variasi berasal dari perbedaan antar negara, menunjukkan bahwa perbedaan karakteristik tiap negara sangat berpengaruh terhadap insiden TBC.

12% berasal dari variasi idiosinkratik, atau faktor yang berubah dari waktu ke waktu dalam suatu negara.

***2. Theta***

Rata-rata theta = 0.8868, menunjukkan bahwa sebagian besar variasi dalam data disebabkan oleh perbedaan antar negara. Theta yang mendekati 1 berarti bahwa individu (negara) memiliki efek spesifik yang kuat dibandingkan variasi waktu.
