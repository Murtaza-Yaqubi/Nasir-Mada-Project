---
title: "An example exploratory analysis script"
date: "2024-02-07"
output: html_document
---

This Quarto file loads the cleaned data and does some exploring.

I \# Setup

```{r}
#load needed packages. make sure they are installed.
library(here) #for data loading/saving
library(dplyr)
library(skimr)
library(ggplot2)
#install.packages("maps")
library(maps)
#install.packages("ggcorrplot")
library(ggcorrplot)
#install.packages("plm")
library(plm)
#install.packages("gt")
library(gt)
#install.packages("car")
library(car)
#install.packages("MASS")  
library(MASS)
#install.packages("tidyverse")
library(tidyverse)
#install.packages("reshape2")
library(reshape2)  # Load the package
#install.packages("scales")
library(scales)
library(here)
library(knitr)
#install.packages("kableExtra")
library(kableExtra)
#install.packages("GGally")
library(GGally)
#install.packages("patchwork")
library(patchwork)
#install.packages("gtsummary")
library(gtsummary)
```

Load the data.

```{r}
#Path to data. Note the use of the here() package and not absolute paths
aa_location <- here::here("data","processed-data","seaa.rds")

#load data
seaa_df <- readRDS(aa_location)
unique(seaa_df$country)

str(seaa_df)
#convert some caracters variables into numerics

seaa_df <- seaa_df %>%
  mutate(across(c(pro_basicwater, pro_safewater, 
                  pro_basicsanitation, pro_safesanitation), 
                ~ as.numeric(.)))


```






# Data exploration Analysis

I want to create boxplot for TBI 

```{r}

# Define distinct colors for each country
# Define selected countries
selected_countries <- c(
  "Algeria", "Bangladesh", "Central African Republic", "Chad", "Ethiopia", "Ghana",
  "Indonesia", "Madagascar", "Malawi", "Myanmar", "Nepal", "Senegal",
  "Sierra Leone", "Sri Lanka", "Tanzania", "Togo", "Uganda", "Zimbabwe"
)

# Custom colors for selected countries (excluding Sierra Leone for now)
country_colors <- c(
  "Algeria" = "#E6194B",  # Red
  "Bangladesh" = "#3CB44B",  # Green
  "Central African Republic" = "#FFE119",  # Yellow
  "Chad" = "#4363D8",  # Blue
  "Ethiopia" = "#F58231",  # Orange
  "Ghana" = "#911EB4",  # Purple
  "Indonesia" = "#42D4F4",  # Light Blue
  "Madagascar" = "#FABEBE",  # Light Red
  "Malawi" = "#469990",  # Teal
  "Myanmar" = "#E6BEFF",  # Lavender
  "Nepal" = "#9A6324",  # Brown
  "Senegal" = "#FFFAC8",  # Cream
  "Sri Lanka" = "#800000",  # Maroon
  "Tanzania" = "#A9A9A9",  # Gray
  "Togo" = "#FFD8B1",  # Peach
  "Uganda" = "#000075",  # Dark Blue
  "Zimbabwe" = "#808000",  # Olive,
  "Sierra Leone" = "#008080"  # Custom Teal (added for missing color)
)

# Convert country to a factor
seaa_df$country <- as.factor(seaa_df$country)

# Create boxplot with borders
boxplot_tbi <- ggplot(seaa_df, aes(x = country, y = tbi, fill = country)) +
  geom_boxplot(color = "black", size = 0.1) +  # Add black border with thicker lines
  scale_fill_manual(values = country_colors) +  # Manually assign colors
  labs(title = "Boxplot of TBI by Country",
       x = "Country",
       y = "TBI") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1),  # Rotate labels for readability
        panel.border = element_rect(color = "black", fill = NA, size = 1.5))  # Add outer frame

tbi_plot_box <- here( "results", "figures", "eda", "tbi_boxplot.png") # to set up location for the pictures created 
ggsave(filename = tbi_plot_box, plot=boxplot_tbi, width = 12, height = 8, units = "in", dpi = 300) # save the pictures created 

plot(boxplot_tbi)

```


*** create spagethi plot*** 
```{r}

# Line plot of TBI over time by country
tbi_spaghety <- ggplot(seaa_df , aes(x = year, y = tbi, color = country)) + 
  geom_line(aes(group = country), alpha = 0.7) +  # Different color for each country
  stat_smooth(method = "loess", col = "black", lwd = 1.5, se = FALSE) +  # Mean line in black
  scale_x_continuous(name = "Year") + 
  scale_y_continuous(name = "Tuberculosis Incidence") +
  labs(title = "Tuberculosis Incidence Trends Over Time by Country") +  # Add title here
  theme_bw() + 
  theme(axis.text = element_text(size = 14, colour = "black"), 
        axis.title = element_text(size = 14, face = "bold"),
        strip.text.x = element_text(size = 14),
        legend.position = "none")  # Remove legend if not needed

tbi_plot_spageti <- here( "results", "figures", "eda", "tbi_spageti.png") # to set up location for the pictures created 
ggsave(filename = tbi_plot_spageti, plot=tbi_spaghety, width = 16, height = 12, units = "in", dpi = 300) # save the pictures created 

plot(tbi_spaghety)

```


***Creating plots to show the trend of all variables in each country over the year***


```{r}
# Define scaling factor for TBI to align with percentage indicators
tbi_scale <- 100 / max(seaa_df$tbi, na.rm = TRUE)

# Reshape the percentage indicators into long format
seaa_long <- seaa_df %>%
  pivot_longer(
    cols = c(pro_basicwater, pro_safewater, pro_basicsanitation, pro_safesanitation),
    names_to = "indicator",
    values_to = "value"
  )

# Prepare TBI data, scaled for plotting
tbi_long <- seaa_df %>%
  mutate(indicator = "TBI", value = tbi * tbi_scale) %>%
  select(country, year, indicator, value)

# Combine percentage indicators and TBI
combined_long <- bind_rows(seaa_long, tbi_long)

# Set factor levels for consistent legend and color mapping
combined_long$indicator <- factor(
  combined_long$indicator,
  levels = c("pro_basicwater", "pro_safewater", "pro_basicsanitation", "pro_safesanitation", "TBI"),
  labels = c("Basic Water", "Safe Water", "Basic Sanitation", "Safe Sanitation", "TBI")
)

# Plot
plot_all_vars <- ggplot(combined_long, aes(x = year, y = value, group = indicator)) +
  geom_line(aes(color = indicator, linetype = indicator), size = 1) +
  facet_wrap(~ country) +
  scale_y_continuous(
    name = "Water, Sanitation (%)",
    sec.axis = sec_axis(~ . / tbi_scale, name = "TBI (per 100k)")
  ) +
  scale_color_manual(
    values = c(
      "Basic Water" = "#1f77b4",
      "Safe Water" = "#ff7f0e",
      "Basic Sanitation" = "#2ca02c",
      "Safe Sanitation" = "#d62728",
      "TBI" = "black"
    )
  ) +
  scale_linetype_manual(
    values = c(
      "Basic Water" = "solid",
      "Safe Water" = "solid",
      "Basic Sanitation" = "solid",
      "Safe Sanitation" = "solid",
      "TBI" = "dashed"
    )
  ) +
  labs(
    title = "Trends of Water, Sanitation, HDI , and TBI (per 100k) by Country",
    x = "Year",
    color = "Indicator",
    linetype = "Indicator"
  ) +
  theme_minimal() +
  theme(
    panel.border = element_blank(),  # No small borders around each panel
    plot.background = element_rect(color = "black", fill = NA, size = 1),  # Outer border
    panel.background = element_blank(),
    strip.text = element_text(size = 10, face = "bold"),
    axis.text.x = element_text(angle = 45, hjust = 1),
    legend.position = "bottom"
  )

#save the plot 
plot_allvars <- here( "results", "figures", "eda", "plot_all_vars.png") # to set up location for the pictures created 
ggsave(filename = plot_allvars , plot=plot_all_vars, width = 16, height = 12, units = "in", dpi = 300) # save the pictures created 

plot(plot_all_vars)
```





Check the layout after saving the figures

```{r}

#| label: fig-multivariable 
#| fig-cap: "Line charts of all variables"
#| echo: FALSE
knitr::include_graphics(here("results",  "figures", "eda", "plot_all_vars.png"))
```
From the plots, it can be seen that percentage of population in those countries increased while the Tuberculosis Incidence decreased during the period. 


***I want to show the mean of each variable every year based on regions***

```{r}


summary_table <- tbl_summary(seaa_df, include = -c(country, region))


saveRDS(summary_table, file = here("results", "tables", "eda", "summary_table.rds"))
print(summary_table)


```

```{r}


# Calculate mean of all relevant variables by year and region
summary_table <- seaa_df %>%
  group_by(region, year) %>%
  summarise(
    mean_tbi = mean(tbi, na.rm = TRUE),
    mean_pro_basicwater = mean(pro_basicwater, na.rm = TRUE),
    mean_pro_safewater = mean(pro_safewater, na.rm = TRUE),
    mean_pro_basicsanitation = mean(pro_basicsanitation, na.rm = TRUE),
    mean_pro_safesanitation = mean(pro_safesanitation, na.rm = TRUE),
    mean_hdi = mean(hdi, na.rm = TRUE),
    .groups = "drop"
  )

# View the first few rows
head(summary_table)

```




```{r}
#| label: tbl-summarytable
#| tbl-cap: "Data summary table."
#| echo: FALSE
resulttable= read_rds(here("code", "eda-code", "tables", "summary_table.rds"))
knitr::kable(resulttable, format = "pipe")

```

***Create a plot to show the trend of each variables by region***
```{r}

# Create summary table: mean of each variable per region and year
summary_df <- seaa_df %>%
  group_by(region, year) %>%
  summarise(
    mean_tbi = mean(tbi, na.rm = TRUE),
    mean_pro_basicwater = mean(pro_basicwater, na.rm = TRUE),
    mean_pro_safewater = mean(pro_safewater, na.rm = TRUE),
    mean_pro_basicsanitation = mean(pro_basicsanitation, na.rm = TRUE),
    mean_pro_safesanitation = mean(pro_safesanitation, na.rm = TRUE),
    mean_hdi = mean(hdi, na.rm = TRUE),
    .groups = "drop"
  )

summary_long <- summary_df %>%
  pivot_longer(
    cols = starts_with("mean_"),
    names_to = "indicator",
    values_to = "mean_value"
  ) %>%
  mutate(indicator = dplyr::recode(as.character(indicator),
    "mean_tbi" = "TBI",
    "mean_pro_basicwater" = "Basic Water",
    "mean_pro_safewater" = "Safe Water",
    "mean_pro_basicsanitation" = "Basic Sanitation",
    "mean_pro_safesanitation" = "Safe Sanitation",
    "mean_hdi" = "HDI"
  ))


# Create line plot
plot_all_vars_region <- ggplot(summary_long, aes(x = year, y = mean_value, color = region)) +
  geom_line(size = 1) +
  geom_point(size = 2) +
  facet_wrap(~ indicator, scales = "free_y") +
  labs(
    title = "Trends of TBI, HDI, Water and Sanitation Indicators by Region (Mean per Year)",
    x = "Year",
    y = "Mean Value",
    color = "Region"
  ) +
  theme_minimal() +
  theme(
    strip.text = element_text(size = 11, face = "bold"),
    axis.text.x = element_text(angle = 45, hjust = 1),
    legend.position = "bottom"
  )

#save the plot 
plot_allvars_region <- here( "results", "figures", "eda", "plot_all_vars_region.png") # to set up location for the pictures created 
ggsave(filename = plot_allvars_region  , plot=plot_all_vars_region, width = 16, height = 12, units = "in", dpi = 300) # save the pictures created 

plot(plot_all_vars_region)
```



## Data Analysis

***Test the linearity***

```{r}


# Convert dataset to long format for faceting
seaa_df_long <- seaa_df %>%
  pivot_longer(cols = c( pro_basicwater, pro_safewater, 
                        pro_basicsanitation, pro_safesanitation, hdi),
               names_to = "variable", values_to = "value")

# Create scatter plot faceted by independent variable
plots_tbi_vs_allvars <- ggplot(seaa_df_long, aes(x = value, y = tbi, color = country)) + 
  geom_point(alpha = 0.6) +  # Scatter points, colored by country
  stat_smooth(method = "loess", col = "black", lwd = 1.2, se = FALSE) +  # LOESS (non-linear) in black
  facet_wrap(~ variable, scales = "free_x") +  # Facet by variable
  labs(
    title = "Relationship Between Tuberculosis Incidence and Independent Variables",
    x = "Independent Variable Value",
    y = "Tuberculosis Incidence (TBI)"
  ) +
  theme_bw() + 
  theme(axis.text = element_text(size = 12, colour = "black"), 
        axis.title = element_text(size = 14, face = "bold"),
        strip.text = element_text(size = 14, face = "bold"), 
        legend.position = "none")  # Hides the legend


#save the plot 
plots_tbi_vs_allvars_loc <- here( "results", "figures", "eda", "plots_tbi_vs_allvars.png") # to set up location for the pictures created 
ggsave(filename = plots_tbi_vs_allvars_loc  , plot=plots_tbi_vs_allvars, width = 16, height = 12, units = "in", dpi = 300) # save the pictures created 

# Show plot
print(plots_tbi_vs_allvars)

```
Note: 

The plot shows non-linear relationship betwen Tuberculosis Incidence and other indevendent variables. 



***Correlation matrix*** 

Spearman's Rank Correlation (Recommended) Spearman correlation is a non-parametric method that measures monotonic relationships (whether the variables move together, not necessarily linearly).

```{r}

# Compute Spearman correlation matrix
cor_matrix_spearman <- cor(seaa_df[, c("tbi", "hdi", "pro_safewater", "pro_basicwater", 
                                           "pro_basicsanitation", "pro_safesanitation")], method = "spearman", use = "complete.obs") %>%
  print()



# Melt the matrix into long format for ggplot

cor_melted <- melt(cor_matrix_spearman)

# Plot heatmap
plot_cor_matrix <- ggplot(cor_melted, aes(Var1, Var2, fill = value)) +
  geom_tile() +
  scale_fill_gradient2(low = "red", mid = "white", high = "blue", midpoint = 0) +
  geom_text(aes(label = round(value, 2)), size = 4) +  # Show correlation values
  theme_minimal() +
  labs(title = "Spearman Correlation Heatmap", x = "", y = "")
matrix_location <- here("results", "figures", "eda", "correlation_matrix.png") # to set up location for the pictures created 
ggsave(filename = matrix_location, plot=plot_cor_matrix, width = 12, height = 12, units = "in", dpi = 300) # save the pictures created 
plot(plot_cor_matrix)
```

```{r}

#| label: fig-Spearman's Correlation Matrix 
#| fig-cap: "Spearman's Correlation Matrix "
#| echo: FALSE
knitr::include_graphics(here("results", "figures","eda",  "correlation_matrix.png"))
```



I will performed longitudinal data analysis

```{r}

vif(lm(tbi ~ hdi + pro_safewater +pro_basicwater + pro_basicsanitation + pro_safesanitation, data = seaa_df)) # The error might be occure due to multicolinearity 

alias(lm(tbi ~ gdp + hdi + pro_cleanfuel + pro_safewater + pro_basicsanitation + 
         pro_safesanitation + mean_exposure_pm2.5 + total_greenhouses, data = asia_africa))



stepwise_model <- stepAIC(lm(tbi ~ gdp + hdi + pro_cleanfuel + pro_safewater + pro_basicsanitation + 
                             pro_safesanitation + mean_exposure_pm2.5 + total_greenhouses, 
                             data = asia_africa), direction = "both") # drop variable with multicolinearity 

summary(stepwise_model)

```

***Performing longitudinal analysis***

Test for mixed or fixed effect using Hausman Test

```{r}
pdata <- pdata.frame(asia_africa, index = c("country", "year"))

fe_model <- plm(tbi ~ pro_basicsanitation + mean_exposure_pm2.5, 
                data = pdata, model = "within")
re_model <- plm(tbi ~ pro_basicsanitation + mean_exposure_pm2.5, 
                data = pdata, model = "random")

hausman_test <- phtest(fe_model, re_model)
print(hausman_test)

```

Based on the Hausman Test, fixed effect is not consistent. Therefore, I will use mixed effect test.

```{r}
summary(re_model)
```

Interpretation: 
***1. variance components Analyisis***

88% dari total variasi berasal dari perbedaan antar negara, menunjukkan bahwa perbedaan karakteristik tiap negara sangat berpengaruh terhadap insiden TBC.

12% berasal dari variasi idiosinkratik, atau faktor yang berubah dari waktu ke waktu dalam suatu negara.

***2. Theta***

Rata-rata theta = 0.8868, menunjukkan bahwa sebagian besar variasi dalam data disebabkan oleh perbedaan antar negara. Theta yang mendekati 1 berarti bahwa individu (negara) memiliki efek spesifik yang kuat dibandingkan variasi waktu.
